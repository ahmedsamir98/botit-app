name: botit-app

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  build_and_Push:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps: 
      - name: Set env
        run: echo "DATE=$(date +'%Y%m%d-%H%M')" >> $GITHUB_ENV

      - name: Send Slack Notification build start
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: "#botit-app"
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://is1-ssl.mzstatic.com/image/thumb/Purple126/v4/e8/03/67/e803678e-7616-6890-9958-dfaf295c3f4a/AppIcon-0-0-1x_U007ephone-0-0-0-85-220.png/512x512bb.jpg
          SLACK_MESSAGE: Build ${{ env.DATE }} Start 
          SLACK_TITLE: Post Title
          SLACK_USERNAME: Botit-App
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: "${{ secrets.DOCKER_USERNAME }}"
          password: "${{ secrets.DOCKER_PASSWORD }}"

      - name: Build and push
        id: build_and_push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ahmedsamir98/botit:${{ env.DATE }}

      - name: Send Slack Notification Build and Push completed
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: "#botit-app"
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://is1-ssl.mzstatic.com/image/thumb/Purple126/v4/e8/03/67/e803678e-7616-6890-9958-dfaf295c3f4a/AppIcon-0-0-1x_U007ephone-0-0-0-85-220.png/512x512bb.jpg
          SLACK_MESSAGE: Build ${{ env.DATE }} Pushed to the Repo 
          SLACK_TITLE: Post Title
          SLACK_USERNAME: Botit-App
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_Push
    if: ${{ needs.build_and_Push.result == 'success' }}
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Checkout deployment branch
        uses: actions/checkout@v2
        with:
          ref: deployment  # Checkout the deployment branch

      - name: Update docker-compose.yaml
        run: |
          sed -i 's|image: ahmedsamir98/botit:##TAGS##|image: ahmedsamir98/botit:${{ env.DATE }}|g' docker-compose.yaml

      - name: Copy Docker Compose file to remote server
        uses: appleboy/scp-action@master
        with:
          host: "${{ secrets.ARTIFACT_HOST }}"
          username: "${{ secrets.REMOTE_SERVER_USERNAME }}"
          key: "${{ secrets.SSH_PRIVATE_KEY }}"
          port: 22
          source: "docker-compose.yaml"
          target: "/opt/botit-app"

      - name: SSH into remote server and start Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: "${{ secrets.ARTIFACT_HOST }}"
          username: "${{ secrets.REMOTE_SERVER_USERNAME }}"
          key: "${{ secrets.SSH_PRIVATE_KEY }}"
          port: 22
          script: |
            cd /opt/botit-app/
            sudo docker compose up -d


  # botit-app:
  #   runs-on: ubuntu-latest
  #   env:
  #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: "${{ secrets.DOCKER_USERNAME }}"
  #         password: "${{ secrets.DOCKER_PASSWORD }}"

  #     - name: Set env
  #       run: echo "DATE=$(date +'%Y%m%d-%H%M')" >> $GITHUB_ENV

  #     - name: Build and push
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         push: true
  #         tags: ahmedsamir98/botit:${{ env.DATE }}


  #     - name: Checkout deployment branch
  #       uses: actions/checkout@v2
  #       with:
  #         ref: deployment  # Checkout the deployment branch
          
  #     - name: Update docker-compose.yaml
  #       run: |
  #         sed -i 's|image: ahmedsamir98/botit:##TAGS##|image: ahmedsamir98/botit:${{ env.DATE }}|g' docker-compose.yaml


  #     - name: Copy Docker Compose file to remote server
  #       uses: appleboy/scp-action@master
  #       with:
  #         host: "${{ secrets.ARTIFACT_HOST }}"
  #         username: "${{ secrets.REMOTE_SERVER_USERNAME }}"
  #         key: "${{ secrets.SSH_PRIVATE_KEY }}"
  #         port: 22
  #         source: "docker-compose.yaml"
  #         target: "/opt/botit-app"

  #     - name: SSH into remote server and start Docker Compose
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: "${{ secrets.ARTIFACT_HOST }}"
  #         username: "${{ secrets.REMOTE_SERVER_USERNAME }}"
  #         key: "${{ secrets.SSH_PRIVATE_KEY }}"
  #         port: 22
  #         script: |
  #           cd /opt/botit-app/
  #           sudo docker compose up -d


  #     - name: send slack notification 
  #       uses: 8398a7/action-slack@v3
  #       with:
  #         text: "Slack message text. Failure :no_entry:"
  #         status: ${{ job.status }}
  #         fields: message,commit,author,eventName,ref,workflow,job,took
  #         mention: 'here'
  #         if_mention: failure,cancelled
  #       if: always()
